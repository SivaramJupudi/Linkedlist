class Solution
{
    //Function to remove duplicates from unsorted linked list.
    public Node removeDuplicates(Node head) 
    {
         // Your code here
        //  Node temp1=head;
         
        //  while(temp1!=null && temp1.next!=null){
        //      Node temp2=temp1;
        //      while(temp2.next!=null){
        //          if(temp1.data!=temp2.next.data){
        //              temp2=temp2.next;
                     
        //          }
        //          else{
        //              temp2.next=temp2.next.next;
        //          }
                 
        //      }
        //      temp1=temp1.next;
             
        //  }
        //  return head;
        
        //Optimal
        
        Node temp=head;
        Node prev=null;
        HashSet<Integer> st=new HashSet<>();
        while(temp!=null){
            int val=temp.data;
            if(st.contains(val)){
                prev.next=prev.next.next;
                
                
            }
            else{
                st.add(val);
                prev=temp;
                
            }
            temp=temp.next;
        }
        return head;
    }
}
